{"version":3,"sources":["components/Character.js","components/Filters.js","components/Characters.js","images/logo.png","components/Header.js","components/CharacterDetail.js","components/CharacterNotFound.js","services/api.js","components/App.js","index.js"],"names":["Character","props","to","name","title","className","isAlive","src","imageUrl","alt","isAlien","species","Filters","onSubmit","ev","preventDefault","htmlFor","type","id","value","filterText","placeholder","onChange","handleFilter","target","Characters","charactersItems","characters","map","character","status","image","Header","logo","CharacterDetail","origin","episodes","CharacterNotFound","back","fetch","then","response","json","data","results","App","useState","setCharacters","setFilterText","useEffect","api","alphabeticalCharacters","list","sort","a","b","toLowerCase","localeCompare","filteredCharacters","filter","includes","exact","path","length","component","productName","match","params","characterName","foundCharacter","find","live","episode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d73e3b11.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Character = (props) => {\n  return (\n    <Link\n      to={`/character/${props.name}`}\n      title=\"Show more about this character\"\n    >\n      <li className={`character ${props.isAlive}`}>\n        <img\n          className=\"character-image\"\n          src={props.imageUrl}\n          alt={`Producto: ${props.name}`}\n        />\n        <h2 className=\"character-name\">{props.name}</h2>\n        <h3 className=\"character-species\">\n          <span>{props.isAlien}</span>\n          {props.species}\n        </h3>\n      </li>\n    </Link>\n  );\n};\n\nCharacter.propTypes = {\n  name: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired,\n  isAlien: PropTypes.string,\n  isAlive: PropTypes.string,\n};\n\nexport default Character;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Filters = (props) => {\n  const handleFilter = (ev) => {\n    props.handleFilter(ev.target.value);\n  };\n  const handleFormSubmit = (ev) => {\n    ev.preventDefault();\n  };\n\n  return (\n    <form className=\"form\" onSubmit={handleFormSubmit}>\n      <label className=\"form-label\" htmlFor=\"name\">\n        Who are you looking for?\n      </label>\n      <input\n        className=\"form-input\"\n        type=\"text\"\n        id=\"name\"\n        value={props.filterText}\n        placeholder=\"Rick\"\n        onChange={handleFilter}\n      />\n    </form>\n  );\n};\n\nFilters.propTypes = {\n  filterText: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\n\nexport default Filters;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Character from \"./Character\";\nimport Filters from \"./Filters\";\n\nconst Characters = (props) => {\n  const charactersItems = props.characters.map((character) => {\n    let isAlien = character.species === \"Human\" ? \"ðŸ‘¤\" : \"ðŸ‘½\";\n    let isAlive = character.status === \"Dead\" ? \"dead\" : \"\";\n    return (\n      <Character\n        key={character.id}\n        imageUrl={character.image}\n        name={character.name}\n        isAlien={isAlien}\n        isAlive={isAlive}\n        species={character.species}\n      />\n    );\n  });\n\n  return (\n    <section>\n      <Filters\n        filterText={props.filterText}\n        handleFilter={props.handleFilter}\n      />\n      <ul className=\"character-list\">{charactersItems}</ul>\n    </section>\n  );\n};\n\nCharacters.propTypes = {\n  characters: PropTypes.array.isRequired,\n  filterText: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\n\nexport default Characters;\n","export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import React from \"react\";\nimport logo from \"../images/logo.png\";\n\nconst Header = () => {\n  return (\n    <img\n      className=\"logo\"\n      src={logo}\n      alt=\"Rick and Morty\"\n      title=\"Rick and Morty\"\n    />\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst CharacterDetail = (props) => {\n  return (\n    <article className=\"character-detail\">\n      <img\n        className=\"img-detail\"\n        src={props.imageUrl}\n        alt={`Producto: ${props.name}`}\n      />\n      <div className=\"title-detail\">\n        <h2>\n          {props.name} <span>{props.isAlive}</span>\n        </h2>\n        <h3>Status: {props.status}</h3>\n        <h3>Species: {props.species}</h3>\n        <h3>Origin: {props.origin}</h3>\n        <h3>Episodes: {props.episodes}</h3>\n        <Link to=\"/\" title=\"Back to the List\">\n          <button className=\"back back-detail\">Go to the list</button>\n        </Link>\n      </div>\n    </article>\n  );\n};\n\nCharacterDetail.propTypes = {\n  name: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  isAlive: PropTypes.string,\n  origin: PropTypes.string.isRequired,\n  episodes: PropTypes.number.isRequired,\n};\n\nexport default CharacterDetail;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst CharacterNotFound = (props) => {\n  return (\n    <section className=\"not-found\">\n      <p className=\"not-found-item\">\n        There is no character with the name \"{props.name}\"\n      </p>\n      {props.back === true ? (\n        <Link to=\"/\" title=\"Back to the list\">\n          <button className=\"back\">Go to the list</button>\n        </Link>\n      ) : null}\n    </section>\n  );\n};\n\nCharacterNotFound.propTypes = {\n  name: PropTypes.string.isRequired,\n  back: PropTypes.bool,\n};\n\nexport default CharacterNotFound;\n","/* eslint-disable import/no-anonymous-default-export */\nconst getDataFromApi = () => {\n  return fetch(\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      return data.results;\n    });\n};\n\nexport default {\n  getDataFromApi: getDataFromApi,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"../stylesheets/App.scss\";\nimport Characters from \"./Characters\";\nimport Header from \"./Header\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport CharacterNotFound from \"./CharacterNotFound\";\nimport api from \"../services/api\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterText, setFilterText] = useState(\"\");\n\n  useEffect(() => {\n    api.getDataFromApi().then((data) => {\n      alphabeticalCharacters(data);\n      setCharacters(data);\n    });\n  }, []);\n\n  const alphabeticalCharacters = (list) => {\n    list.sort((a, b) => {\n      return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n    });\n  };\n\n  const handleFilter = (filterText) => {\n    setFilterText(filterText);\n  };\n\n  const filteredCharacters = characters.filter((character) => {\n    return character.name.toLowerCase().includes(filterText.toLowerCase());\n  });\n\n  function isAlive(foundCharacter) {\n    let isAlive;\n    if (foundCharacter.status === \"Dead\") {\n      isAlive = \"ðŸ’€\";\n    } else if (foundCharacter.status === \"Alive\") {\n      isAlive = \"ðŸ’–\";\n    } else {\n      isAlive = \"\";\n    }\n    return isAlive;\n  }\n\n  const renderDetail = (props) => {\n    const productName = props.match.params.characterName;\n    const foundCharacter = characters.find((character) => {\n      return productName === character.name;\n    });\n    if (foundCharacter) {\n      const live = isAlive(foundCharacter);\n      return (\n        <CharacterDetail\n          imageUrl={foundCharacter.image}\n          name={foundCharacter.name}\n          status={foundCharacter.status}\n          species={foundCharacter.species}\n          isAlive={live}\n          origin={foundCharacter.origin.name}\n          episodes={foundCharacter.episode.length}\n        />\n      );\n    } else {\n      return <CharacterNotFound name={productName} back={true} />;\n    }\n  };\n\n  return (\n    <>\n      <header className=\"Header\">\n        <Header />\n      </header>\n      <main className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            {filteredCharacters.length === 0 ? (\n              <>\n                <Characters\n                  characters={filteredCharacters}\n                  filterText={filterText}\n                  handleFilter={handleFilter}\n                />\n                <CharacterNotFound name={filterText} />\n              </>\n            ) : (\n              <Characters\n                characters={filteredCharacters}\n                filterText={filterText}\n                handleFilter={handleFilter}\n              />\n            )}\n          </Route>\n          <Route\n            path=\"/character/:characterName\"\n            component={renderDetail}\n          ></Route>\n        </Switch>\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","// Este es el archivo desde el que comienza a pintarse la web. Recoge el div \"Root\", donde pintarÃ¡ lo que queremos.\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}